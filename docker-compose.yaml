version: '3.7'

services:
  rabbit:
    image: rabbitmq:4.0-management-alpine
    expose:
      - "5672"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - flash-converter-network
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=lapin
      - RABBITMQ_DEFAULT_PASS=cretin

  redis:
    image: redis:7.4-alpine3.20
    expose:
      - "6379"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - flash-converter-network
    command:
      [ "redis-server", "--appendonly", "yes" ]
    restart: unless-stopped

  wf-default:
    image: flash-converter-wf:0.1.0
    depends_on:
      - redis
      - rabbit
    build:
      dockerfile: wf.Dockerfile
    networks:
      - flash-converter-network
    volumes:
      - uploads:/app/uploads
    environment:
      - CELERY_BROKER_URL=amqp://lapin:cretin@rabbit:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - UPLOAD_DIR=/app/uploads
    restart: unless-stopped
    command:
      [ "celery", "--app=flash_converter_wf.server.celery_app", "worker", "--loglevel=info", "-Q", "default" ]

  wf-voice:
    image: flash-converter-wf:0.1.0
    depends_on:
      - redis
      - rabbit
    build:
      dockerfile: wf.Dockerfile
    networks:
      - flash-converter-network
    volumes:
      - uploads:/app/uploads
    environment:
      - CELERY_BROKER_URL=amqp://lapin:cretin@rabbit:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - UPLOAD_DIR=/app/uploads
    restart: unless-stopped
    command:
      [ "celery", "--app=flash_converter_wf.server.celery_app", "worker", "--loglevel=info", "-Q", "voice" ]

  wf-audio:
    image: flash-converter-wf:0.1.0
    depends_on:
      - redis
      - rabbit
    build:
      dockerfile: wf.Dockerfile
    networks:
      - flash-converter-network
    volumes:
      - uploads:/app/uploads
    environment:
      - CELERY_BROKER_URL=amqp://lapin:cretin@rabbit:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - UPLOAD_DIR=/app/uploads
    restart: unless-stopped
    command:
      [ "celery", "--app=flash_converter_wf.server.celery_app", "worker", "--loglevel=info", "-Q", "audio" ]

  wf-subtitle:
    image: flash-converter-wf:0.1.0
    depends_on:
      - redis
      - rabbit
    build:
      dockerfile: wf.Dockerfile
    networks:
      - flash-converter-network
    volumes:
      - uploads:/app/uploads
    environment:
      - CELERY_BROKER_URL=amqp://lapin:cretin@rabbit:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - UPLOAD_DIR=/app/uploads
    restart: unless-stopped
    command:
      [ "celery", "--app=flash_converter_wf.server.celery_app", "worker", "--loglevel=info", "-Q", "subtitle" ]

  ws:
    image: flash-converter-ws:0.1.0
    depends_on:
      - wf-default
      - wf-voice
      - wf-audio
      - wf-subtitle
      - rabbit
    build:
      dockerfile: ws.Dockerfile
    expose:
      - '8000'
    ports:
      - '8000:8000'
    networks:
      - flash-converter-network
    volumes:
      - uploads:/app/uploads
    environment:
      - CELERY_BROKER_URL=amqp://lapin:cretin@rabbit:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - UPLOAD_DIR=/app/uploads
      - ALLOW_ORIGINS=http://localhost:5173, http://127.0.0.1:5173, http://ws:5173, http://localhost
    restart: unless-stopped

  ui:
    image: flash-converter-ui:0.1.0
    depends_on:
      - ws
    build:
      dockerfile: ui.Dockerfile
    expose:
      - '80'
    ports:
      - '80:80'
    networks:
      - flash-converter-network
    environment:
      - API_BASE_URL=http://ws:8000
    restart: unless-stopped

volumes:
  redis_data:
  uploads:

networks:
  flash-converter-network:
    driver: bridge
